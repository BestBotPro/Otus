---
- hosts: all
  become: true
  tasks:
    - name: install packages
      apt:
        update_cache: yes
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - borgbackup
          - mc
          - sshpass
    - name: print /etc/hostname
      shell: cat /etc/hostname
      register: results
    - debug:
        var: results.stdout
- hosts: server
  become: true
  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted
      listen: "restart sshd"  

  tasks:
    - name: print /etc/hostname
      shell: cat /etc/hostname
      register: results

    - debug:
        var: results.stdout

    - name: Create a user 'borg'
      shell: useradd -m -s /bin/bash -p $(openssl passwd -6 1234) borg
      ignore_errors: yes

    - name: Ensure directory /var/backup exists
      file:
        path: /var/backup
        state: directory
        mode: "0755"
        owner: borg
        group: borg

    - name: Ensure directory /home/borg/.ssh exists
      file:
        path: /home/borg/.ssh
        state: directory
        mode: "0700"
        owner: borg
        group: borg

    - name: Ensure file authorized_keys exists
      file:
        path: /home/borg/.ssh/authorized_keys
        state: touch
        mode: "0600"
        owner: borg
        group: borg

    - name: Test sshd config before applying changes
      command: sshd -t
      register: test_sshd
      changed_when: false
      ignore_errors: true  

    - name: Configure sshd if the test is successful
      lineinfile:
        path: /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
        regex: ^(#)?{{ item.key }}
        line: "{{ item.key }} {{ item.value }}"
        state: present
      loop:
        - { key: "PermitRootLogin", value: "yes" }
        - { key: "PasswordAuthentication", value: "yes" }
      when: test_sshd.rc == 0  
      notify: "restart sshd"  

    - debug:
        msg: "SSHD config test failed, check error details"
      when: test_sshd.rc != 0  

- hosts: client
  become: true
  vars:
    repo: borg@192.168.50.10:/var/backup/
    conf_file_service: /etc/systemd/system/borg-backup.service
    conf_file_timer: /etc/systemd/system//borg-backup.timer
  tasks:
    - name: print /etc/hostname
      shell: cat /etc/hostname
      register: results
    - debug:
        var: results.stdout
    - name: Generate ssh-key-gen
      command: ssh-keygen -q -t rsa  -f /root/.ssh/id_rsa  -N ''
    - name: ssh-copy-id to server
      shell: >
        sshpass -p 1234 ssh-copy-id -i /root/.ssh/id_rsa.pub -o
        StrictHostKeyChecking=no borg@192.168.56.12
    - name: borg init
      shell: borg init -e none borg@192.168.56.12:/var/backup/
    - name: borg create
      shell: borg create --stats --list
        borg@192.168.56.12:/var/backup/::"etc-{now:%Y-%m-%d_%H:%M:%S}" /etc
    - name: borg list
      shell: borg list borg@192.168.56.12:/var/backup/
      register: borg_results
    - debug:
        var: borg_results.stdout
    - name: borg-backup.timer template
      template:
        src: timer.j2
        dest: "{{ conf_file_timer }}"
        mode: "0644"
    - name: borg-backup.servise template
      template:
        src: service.j2
        dest: "{{ conf_file_service }}"
        mode: "0644"
    - name: systemctl borg start
      shell: |
        systemctl daemon-reload
        systemctl enable borg-backup.timer 
        systemctl start borg-backup.timer
    - name: systemctl status borg-backup.timer
      shell: systemctl status borg-backup.timer
      register: borg_results_status
    - debug:
        var: borg_results_status.stdout_lines
    - name: systemctl list-timers --all
      shell: systemctl list-timers --all
      register: list_timer_status
    - debug:
        var: list_timer_status.stdout_lines